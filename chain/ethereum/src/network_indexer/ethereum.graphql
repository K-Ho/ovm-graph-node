""" Block is an Ethereum block."""
type Block @entity {
  id: ID!

  """The number of this block, starting at 0 for the genesis block."""
  number: BigInt!

  """The block hash of this block."""
  hash: Bytes!

  """The parent block of this block."""
  parent: Block

  """The block nonce, an 8 byte sequence determined by the miner."""
  nonce: Bytes!

  """The keccak256 hash of the root of the trie of transactions in this block."""
  transactionsRoot: Bytes!

  """The number of transactions in this block."""
  transactionCount: Int!

  """The keccak256 hash of the state trie after this block was processed."""
  stateRoot: Bytes!

  """The keccak256 hash of the trie of transaction receipts in this block."""
  receiptsRoot: Bytes!

  # """The account that mined this block."""
  # miner: Account!

  """An arbitrary data field supplied by the miner."""
  extraData: Bytes!

  """The maximum amount of gas that was available to transactions in this block."""
  gasLimit: BigInt!

  """The amount of gas that was used executing transactions in this block."""
  gasUsed: BigInt!

  """The unix timestamp at which this block was mined."""
  timestamp: BigInt!

  """
  A bloom filter that can be used to check if a block may
  contain log entries matching a filter.
  """
  logsBloom: Bytes!

  """The hash that was used as an input to the PoW process."""
  mixHash: Bytes!

  """A measure of the difficulty of mining this block."""
  difficulty: BigInt!

  """The sum of all difficulty values up to and including this block."""
  totalDifficulty: BigInt!

  """Whether the block is an ommer."""
  isOmmer: Boolean!

  """The number of ommers (AKA uncles) associated with this block."""
  ommerCount: Int!

  """
  A list of ommer (AKA uncle) blocks associated with this block.
  """
  ommers: [Block]!

  """The keccak256 hash of all the ommers (AKA uncles) associated with this block."""
  ommerHash: Bytes!

  """
  A list of transactions associated with this block.
  """
  transactions: [Transaction!]

  # """The logs emitted in this block."""
  # logs: [Log!]!

  """Size of the block in bytes."""
  size: BigInt

  """Seal fields."""
  sealFields: [Bytes!]!
}

""" Transaction is an Ethereum transaction. """
type Transaction @entity {
  id: ID!

  """ Hash is the hash of this transaction. """
  hash: Bytes!

  """ Nonce is the nonce of the account this transaction was generated with. """
  nonce: BigInt!

  """
  Index is the index of this transaction in the parent block.
  This will be null if the transaction has not yet been mined.
  """
  index: BigInt

  """ From is the account that sent this transaction - this will always be an externally owned account. """
  from: Bytes!

  """ To is the account the transaction was sent to. This is null for contract-creating transactions. """
  to: Bytes

  """ Value is the value, in wei, sent along with this transaction. """
  value: BigInt!

  """ GasPrice is the price offered to miners for gas, in wei per unit. """
  gasPrice: BigInt!

  """ Gas is the maximum amount of gas this transaction can consume. """
  gas: BigInt!

  """ InputData is the data supplied to the target of the transaction. """
  inputData: Bytes!

  """ Block is the block this transaction was mined in. This will be null if the transaction has not yet been mined. """
  block: Block

  #  """
  #  Logs is a list of log entries emitted by this transaction.
  #  If the transaction has not yet been mined, this field will be null.
  #  """
  #  logs: [Log!]

  #  """
  #  Status is the return status of the transaction.
  #  This will be 1 if the transaction succeeded,
  #  or 0 if it failed (due to a revert, or due to running out of gas).
  #  If the transaction has not yet been mined, this field will be null.
  #  """
  # status: BigInt # From transaction receipt

  #  """
  #  GasUsed is the amount of gas that was used processing this transaction.
  #  If the transaction has not yet been mined, this field will be null.
  #  """
  # gasUsed: BigInt # From transaction receipt

  #  """
  #  CumulativeGasUsed is the total gas used in the block up to and including this transaction.
  #  If the transaction has not yet been mined, this field will be null.
  #  """
  # cumulativeGasUsed: BigInt # From transaction receipt

  #  """ CreatedContract is the account that was created by a contract creation transaction.
  #  If the transaction was not a contract creation transaction, or it has not yet been mined, this field will be null.
  #  """
  # createdContract: Account # From transaction receipt
}
